# CPU-only Dockerfile for Roop-Unleashed
FROM ubuntu:22.04

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV OMP_NUM_THREADS=4
ENV MKL_NUM_THREADS=4
ENV NUMEXPR_NUM_THREADS=4

# Performance optimizations for CPU
ENV MALLOC_CONF="background_thread:true,metadata_thp:auto,dirty_decay_ms:30000,muzzy_decay_ms:30000"
ENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libtcmalloc_minimal.so.4

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3.11-dev \
    python3.11-distutils \
    python3-pip \
    ffmpeg \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgoogle-perftools4 \
    libtcmalloc-minimal4 \
    libblas3 \
    liblapack3 \
    libatlas-base-dev \
    gfortran \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create symlinks for python
RUN ln -sf /usr/bin/python3.11 /usr/bin/python3 && \
    ln -sf /usr/bin/python3.11 /usr/bin/python

# Install latest pip
RUN python3 -m pip install --upgrade pip wheel setuptools

# Create app directory
WORKDIR /app

# Create non-root user for security
RUN groupadd -r roop && useradd -r -g roop roop

# Copy requirements first for better caching
COPY requirements*.txt ./

# Install CPU-optimized PyTorch and dependencies
RUN pip install --no-cache-dir \
    torch==2.4.0+cpu torchvision==0.19.0+cpu torchaudio==2.4.0+cpu \
    --index-url https://download.pytorch.org/whl/cpu && \
    pip install --no-cache-dir -r requirements-minimal.txt && \
    pip install --no-cache-dir \
    onnxruntime==1.18.1

# Copy application code
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p /app/models /app/temp /app/logs /app/output /app/rag_vectors /app/knowledge /tmp/matplotlib && \
    chown -R roop:roop /app && \
    chmod -R 755 /app/models /app/temp /app/logs /app/output && \
    chmod 777 /tmp/matplotlib

# Create model download script
COPY scripts/download_models.py /app/download_models.py

# Make script executable
RUN chmod +x /app/download_models.py

# Create entrypoint script for CPU
COPY scripts/entrypoint-cpu.sh /app/entrypoint-cpu.sh

RUN chmod +x /app/entrypoint-cpu.sh

# Switch to non-root user
USER roop

# Expose default port
EXPOSE 7860

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:7860/ || exit 1

# Set entrypoint
ENTRYPOINT ["/app/entrypoint-cpu.sh"]

# Default command
CMD ["python3", "run.py"]